/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/rgb.h>
#include <dt-bindings/zmk/ext_power.h>
#include <dt-bindings/zmk/outputs.h>
#include "keymap_french.h"
#include "zmk-helpers/helper.h"
#include "french_unicode.dtsi"

#define DEFAULT 0
#define RAISE  1
#define ADJUST 2

/* NOTE: At the time of the creation of this keymap, there are no specified codes for 'eisuu' and 'kana' input in ZMK.
However, 'LANG1' and 'LANG2' are fully-functioning candidates for 'kana' and 'eisuu' input respectively.
As such, those are in use within the default layer at this time.*/

/ {
       keymap {
              compatible = "zmk,keymap";

              default_layer {
 // ---------------------------------------------------------------------------------------------------------------------------------
 // |  &     |   é    |   "    |   '   |   ( |   -    |                                      |   è    |   _    |   ç    |   à    |   )    |   =    |
 // |  ESC   |   A    |   Z    |   E   |   R |   T    |                                      |   Y    |   U    |   I    |   O    |   P    |  DEL   |
 // |  TAB   |   A    |   S    |   D   |   F |   G    |                                      |   H    |   J    |   K    |   L    |   M    |  BKSP  |
 // |  SHIFT |   W    |   X    |   C   |   V |   B    |   N    |                    |   ,    |   ;    |   :    |   !    |   ù    |   UP   |  RET   |
 // |  CTRL  |  WIN   |  ALT   |  HOME | END | LCYCLE | SPACE  |                    |  SPACE |   ^    |   $    |   *    |  LEFT  |   DOWN |  RIGHT |
                     bindings = <
       &kp FR_AMPR  &kp FR_EACU  &kp FR_DQUO &kp FR_QUOT &kp FR_LPRN &kp FR_MINS                             &kp FR_EGRV  &kp FR_UNDS   &kp FR_CCED  &kp FR_AGRV    &kp FR_RPRN  &kp FR_EQL
       &kp ESC      &kp FR_A     &kp FR_Z    &kp FR_E    &kp FR_R    &kp FR_T                                &kp FR_Y     &kp FR_U      &kp FR_I     &kp FR_O       &kp FR_P     &kp DEL
       &kp TAB      &kp FR_Q     &kp FR_S    &kp FR_D    &kp FR_F    &kp FR_G                                &kp FR_H     &kp FR_J      &kp FR_K     &kp FR_L       &kp FR_M     &kp BKSP
       &kp LSHFT    &kp FR_W     &kp FR_X    &kp FR_C    &kp FR_V    &kp FR_B   &kp FR_N         &kp FR_COMM &kp FR_SCLN  &kp FR_COLN   &kp FR_EXLM  &kp FR_UGRV    &kp UP       &kp RET
       &kp LCTRL    &kp LGUI     &kp LALT    &kp HOME    &kp END     &kp SPACE  &kp SPACE        &kp SPACE   &kp FR_CIRC  &kp FR_DLR    &kp FR_ASTR  &kp LEFT       &kp DOWN     &kp RIGHT >;
              };
              raise_layer {
 // ---------------------------------------------------------------------------------------------------------------------------------
 // |       |       |       |       |       |       |                                    |       |       |       |       |       |       |
 // |   `   |   1   |   2   |   3   |   4   |   5   |                                    |   6   |   7   |   8   |   9   |   0   |  DEL  |
 // |       |  F1   |  F2   |  F3   |  F4   |  F5   |                                    |  F6   |   -   |   =   |   [   |   ]   |   \   |
 // |       |  F7   |  F8   |  F9   |  F10  |  F11  |       |                    |       |  F12  |       | PSCRN | PG_DN | PG_UP |       |
 // |       |       |       |       |       |       |       |                    |       |       |       | NEXT  | VOL-  | VOL+  | PLAY  |
                     bindings = <
       &trans    &trans &trans &trans &trans  &trans                       &trans  &trans    &trans     &trans       &trans       &trans
       &kp GRAVE &kp N1 &kp N2 &kp N3 &kp N4  &kp N5                       &kp N6  &kp N7    &kp N8     &kp N9       &kp N0       &kp DEL
       &trans    &kp F1 &kp F2 &kp F3 &kp F4  &kp F5                       &kp F6  &kp MINUS &kp EQUAL  &kp LBKT     &kp RBKT     &kp BSLH
       &trans    &kp F7 &kp F8 &kp F9 &kp F10 &kp F11 &trans        &trans &kp F12 &trans    &kp PSCRN  &kp PG_DN    &kp PG_UP    &trans
       &trans    &trans &trans &trans &trans  &trans  &trans        &trans &trans  &trans    &kp C_NEXT &kp C_VOL_DN &kp C_VOL_UP &kp C_PP
                     >;
              };
              adjust_layer {
 // ---------------------------------------------------------------------------------------------------------------------------------
 // |    `     |    !     |    @     |    #     |    $     |    %     |                                          |    ^     |    &     |    *     |    (     |    )     |  EP TOG  |
 // |  BT CLR  | BT SEL0  | BT SEL1  | BT SEL2  | BGT SEL3 | BT SEL4  |                                          | RGB EFF+ | RGB HUE+ | RGB SAT+ | RGB SPD+ | RGB BRI+ | RGB TOG  |
 // |  BT NXT  | OUT TOG  | OUT USB  | OUT BLE  |          |          |                                          | RGB EFF- | RGB HUE- | RGB SAT- | RGB SPD- | RGB BRI- |          |
 // |  BT PRV  |          |          |          |          |          |    {     |                    |    }     |          |          |          |          |          |          |
 // |          |          |          |          |          |          |          |                    |          |          |          |          |          |          |          |
                     bindings = <
       &kp GRAVE  &kp EXCL     &kp AT       &kp HASH     &kp DLLR     &kp PRCNT                             &kp CARET       &kp AMPS        &kp ASTRK       &kp LPAR        &kp RPAR        &ext_power EP_TOG
       &bt BT_CLR &bt BT_SEL 0 &bt BT_SEL 1 &bt BT_SEL 2 &bt BT_SEL 3 &bt BT_SEL 4                          &rgb_ug RGB_EFF &rgb_ug RGB_HUI &rgb_ug RGB_SAI &rgb_ug RGB_SPI &rgb_ug RGB_BRI &rgb_ug RGB_TOG
       &bt BT_NXT &out OUT_TOG &out OUT_USB &out OUT_BLE &trans       &trans                                &rgb_ug RGB_EFR &rgb_ug RGB_HUD &rgb_ug RGB_SAD &rgb_ug RGB_SPD &rgb_ug RGB_BRD &trans
       &bt BT_PRV &trans       &trans       &trans       &trans       &trans       &kp LBRC        &kp RBRC &trans          &trans          &trans          &trans          &trans          &trans
       &trans     &trans       &trans       &trans       &trans       &trans       &trans          &trans   &trans          &trans          &trans          &trans          &trans          &trans
                     >;
              };
       };
};
